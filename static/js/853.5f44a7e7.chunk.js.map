{"version":3,"file":"static/js/853.5f44a7e7.chunk.js","mappings":"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","sources":["components/pageContentBox/PageContentBox.styled.js","components/pageHeader/PageHeader.styled.js","components/pageTable/common/PageTableStyle.styled.js","components/pageTable/common/TableTd.style.js","components/pageTable/common/TableTh.style.js","components/pageTable/common/TableThBox.styled.js","components/pageTitle/PageTtitle.styled.js","components/section/Section.styled.js","components/paginationPage/PaginationBox.js","components/tablePagination/TablePagination.jsx","components/rolesTable/RolesTable.jsx","pages/Roles.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageContentBox = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-color: #fff;\n  border: 0 solid rgba(0, 0, 0, 0.125);\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0.125), 0 1px 3px rgba(0, 0, 0, 0.2);\n  border-radius: 0.25rem;\n  margin-top: 30px;\n  margin-right: 10px;\n  margin-left: 10px;\n  margin-bottom: 30px;\n  animation: pageAnime 1s ease 0s 1 normal forwards;\n`;\n","import styled from 'styled-components';\n\nexport const PageHeader = styled.div`\n  display: flex;\n  align-items: center;\n  /* gap: 20px; */\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\nexport const PageTableStyle = styled.table`\n  /* display: block; */\n  width: 100%;\n  border: 1px solid #dee2e6;\n  border-collapse: collapse;\n  margin-top: 6px;\n  margin-bottom: 6px;\n`;\n","import styled from 'styled-components';\n\nexport const TableTd = styled.td`\n  padding: 12px;\n  border: 1px solid #dee2e6;\n  background-color: rgba(0, 0, 0, 0.05);\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: start;\n`;\n","import styled from 'styled-components';\n\nexport const TableTh = styled.th`\n  padding: 8px;\n  border: 1px solid #dee2e6;\n  border-bottom: 2px solid #dee2e6;\n  text-align: start;\n`;\n","import styled from 'styled-components';\n\nexport const TableThBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 400;\n`;\n","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n  padding: 12px 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n`;\n","import styled from 'styled-components';\n\nexport const PaginationBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { Pagination, Stack } from '@mui/material';\nimport { PaginationBox } from 'components/paginationPage/PaginationBox';\n\nconst TablePagination = ({ allPage, onChange, list, page }) => {\n  return (\n    <>\n      {!allPage || allPage === 1 || list.length < 1 ? (\n        <PaginationBox></PaginationBox>\n      ) : (\n        <PaginationBox>\n          <div>\n            <p>{`${page} page of ${allPage} pages`}</p>\n          </div>\n          <Stack spacing={2}>\n            <Pagination\n              // getItemAriaLabel={handelClick}\n              onChange={onChange}\n              count={allPage}\n              shape=\"rounded\"\n            />\n          </Stack>\n        </PaginationBox>\n      )}\n    </>\n  );\n};\n\n// ({\n//     !perPage || perPage === 1 || usersList.length <= 1 ? (\n//       <PaginationBox></PaginationBox>\n//     ) : (\n//       <PaginationBox>\n//         <div>\n//           <p>{`${page} page of ${perPage} pages`}</p>\n//         </div>\n//         <Stack spacing={2}>\n//           <Pagination\n//             // getItemAriaLabel={handelClick}\n//             onChange={onChange}\n//             count={perPage}\n//             shape=\"rounded\"\n//           />\n//         </Stack>\n//       </PaginationBox>\n//     )})\n\nexport default TablePagination;\n","import { PageTableStyle } from 'components/pageTable/common/PageTableStyle.styled';\nimport { TableTd } from 'components/pageTable/common/TableTd.style';\nimport { TableTh } from 'components/pageTable/common/TableTh.style';\nimport { TableThBox } from 'components/pageTable/common/TableThBox.styled';\nimport { BiEditAlt, BiXCircle } from 'react-icons/bi';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { rolesOperations } from 'redux/roles';\n\nconst RolesTable = ({ list, title, btnTitle, prevPath }) => {\n  const dispatch = useDispatch();\n  const handleClick = e => {\n    const id = e.currentTarget.dataset.value;\n    dispatch(rolesOperations.getRoleForm(id));\n  };\n  const deleteRole = (id, title) => {\n    // eslint-disable-next-line no-restricted-globals\n    const getconfirm = confirm(\n      `Вы действительно хотите удалить роль \"${title}\"`\n    );\n    if (getconfirm) {\n      dispatch(rolesOperations.RoleDelete(id));\n    }\n  };\n  let tableTitles = [];\n  if (list.length === 0) {\n    return tableTitles;\n  } else {\n    tableTitles = Object.keys(list[0]);\n  }\n\n  return (\n    <>\n      {list.length === 0 ? (\n        <div>Нечего нет</div>\n      ) : (\n        <PageTableStyle>\n          <thead>\n            <tr>\n              {tableTitles.map(elem => (\n                <TableTh key={elem}>\n                  <TableThBox>{elem}</TableThBox>\n                </TableTh>\n              ))}\n              <TableTh>\n                <TableThBox style={{ width: '8%' }}>Actions</TableThBox>\n              </TableTh>\n            </tr>\n          </thead>\n          <tbody>\n            {list.map(elem => (\n              <tr key={elem.id}>\n                <TableTd>{elem.id}</TableTd>\n                <TableTd>{elem.alias}</TableTd>\n                <TableTd>{elem.title}</TableTd>\n                <TableTd style={{ width: '8%' }}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '12px',\n                    }}\n                  >\n                    <Link\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                      }}\n                      to={`update/${elem.title}`}\n                      data-value={elem.id}\n                      onClick={handleClick}\n                      state={{\n                        title: title,\n                        btnTitle: btnTitle,\n                        prevPath: prevPath,\n                        idRole: elem.id,\n                      }}\n                    >\n                      <BiEditAlt\n                        fill=\"blue\"\n                        data-value={elem.id}\n                        title=\"Update user\"\n                        style={{ width: '20px', height: '20px' }}\n                      />\n                    </Link>\n\n                    {/* <Link\n                      to={`/userShow/${elem.nickname}`}\n                      state={{\n                        prevPath: location.pathname,\n                        nickName: elem.nickname,\n                      }}\n                      style={{ display: 'flex', alignItems: 'center' }}\n                    >\n                      <BiIdCard\n                        fill=\"blue\"\n                        style={{ width: '20px', height: '20px' }}\n                        title=\"Show user info\"\n                      />\n                    </Link> */}\n                    <BiXCircle\n                      fill=\"blue\"\n                      style={{\n                        cursor: 'pointer',\n                        width: '20px',\n                        height: '20px',\n                      }}\n                      type=\"button\"\n                      onClick={() => deleteRole(elem.id, elem.title)}\n                      title=\"Delete user\"\n                    />\n                  </div>\n                </TableTd>\n              </tr>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              {tableTitles.map(elem => (\n                <TableTh key={elem}>\n                  <TableThBox>{elem}</TableThBox>\n                </TableTh>\n              ))}\n              <TableTh style={{ width: '8%' }}>\n                <TableThBox>Actions</TableThBox>\n              </TableTh>\n            </tr>\n          </tfoot>\n        </PageTableStyle>\n      )}\n    </>\n  );\n};\n\nexport default RolesTable;\n","import TablePagination from 'components/tablePagination/TablePagination';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { rolesOperations, rolesSelectors } from 'redux/roles';\nimport RolesTable from 'components/rolesTable/RolesTable';\nimport { PageContentBox } from '../components/pageContentBox/PageContentBox.styled';\nimport { PageHeader } from '../components/pageHeader/PageHeader.styled';\nimport { PageTitle } from '../components/pageTitle/PageTtitle.styled';\nimport { Section } from '../components/section/Section.styled';\nimport theme from '../theme/theme';\n\nconst Roles = () => {\n  const currentPage = useSelector(rolesSelectors.getCurrentPage);\n  const [page, setPage] = useState(currentPage);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const titlePage = useSelector(rolesSelectors.getTitle);\n  const btnTitle = useSelector(rolesSelectors.getBtnTitle);\n  const roleList = useSelector(rolesSelectors.getRolesList);\n  const formFields = useSelector(rolesSelectors.getFieldsForm);\n  const total = useSelector(rolesSelectors.getTotalPage);\n\n  useEffect(() => {\n    dispatch(rolesOperations.getRoles(page));\n  }, [dispatch, page]);\n  const handelClick = (e, page) => {\n    if (currentPage !== page) {\n      setPage(page);\n    }\n  };\n  return (\n    <PageContentBox>\n      <Section>\n        <PageHeader>\n          <PageTitle>{titlePage}</PageTitle>\n          <Link\n            style={theme.btn.btnGreen}\n            to={`create`}\n            state={{\n              title: titlePage,\n              fields: formFields,\n              btnTitle: btnTitle,\n              prevPath: location.pathname,\n            }}\n          >\n            {btnTitle}\n          </Link>\n        </PageHeader>\n      </Section>\n      <Section>\n        <RolesTable\n          list={roleList}\n          title={titlePage}\n          btnTitle={btnTitle}\n          prevPath={location.pathname}\n        />\n        <TablePagination\n          allPage={total}\n          list={roleList}\n          onChange={handelClick}\n          page={page}\n        />\n      </Section>\n    </PageContentBox>\n  );\n};\n\nexport default Roles;\n"],"names":["PageContentBox","styled","PageHeader","PageTableStyle","TableTd","TableTh","TableThBox","PageTitle","Section","PaginationBox","allPage","onChange","list","page","length","Stack","spacing","Pagination","count","shape","title","btnTitle","prevPath","dispatch","useDispatch","handleClick","e","id","currentTarget","dataset","value","rolesOperations","tableTitles","Object","keys","map","elem","style","width","alias","display","alignItems","gap","to","onClick","state","idRole","fill","height","cursor","type","confirm","deleteRole","currentPage","useSelector","rolesSelectors","useState","setPage","location","useLocation","titlePage","roleList","formFields","total","useEffect","theme","fields","pathname","TablePagination"],"sourceRoot":""}