{"version":3,"file":"static/js/15.9df9c01a.chunk.js","mappings":"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","sources":["components/form/FormStyle.styled.js","components/form/common/FormBox.styled.js","components/form/common/InputStyle.styled.js","components/form/common/LabelStyle.styled.js","components/modal/common/Backdrop.styled.js","components/modal/common/ModalStyle.styled.js","components/modal/common/ModalCloseIcon.styled.js","components/modal/Modal.jsx","components/pageContentBox/PageContentBox.styled.js","components/pageHeader/PageHeader.styled.js","components/pageTable/common/PageTableStyle.styled.js","components/pageTable/common/TableTd.style.js","components/pageTable/common/TableTh.style.js","components/pageTable/common/TableThBox.styled.js","components/pageTitle/PageTtitle.styled.js","components/section/Section.styled.js","components/paginationPage/PaginationBox.js","components/tablePagination/TablePagination.jsx","components/createLanguagesForm/CreateLanguagesForm.jsx","components/languagesTable/LanguagesTable.jsx","pages/Languages.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const FormStyle = styled(Form)`\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\ngap: 25px;\n`","import styled from \"styled-components\";\n\nexport const FormBox = styled.div`\nheight: 38px;\n/* padding-bottom: 40px; */\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\ngap: 40px;\n`","import styled from 'styled-components';\n\nexport const InputStyle = styled.input`\n  width: 100%;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n  box-shadow: inset 0 0 0 transparent;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n`;\n","import styled from \"styled-components\";\n\nexport const LabelStyle = styled.label`\nfont-weight: 700;\nfont-size: inherit;\nline-height: 1.5;\nwidth: 18%;\n\n`","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n","import styled from 'styled-components';\n\nexport const ModalStyle = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 650px;\n  transform: translate(50%, 60%);\n  border-radius: 5px;\n  padding: 40px;\n  background-color: white;\n  animation: modalAnim 1.1s ease 0s 1 normal forwards;\n  box-shadow: -2rem 2rem 2rem rgba(black, 0.2);\n`;\n","import styled from 'styled-components';\nimport { BiX } from 'react-icons/bi';\n\nexport const ModalCloseIcon = styled(BiX)`\n  fill: gray;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n","import { Backdrop } from './common/Backdrop.styled';\nimport { ModalStyle } from './common/ModalStyle.styled';\nimport { ModalCloseIcon } from './common/ModalCloseIcon.styled';\nimport { PageTitle } from 'components/pageTitle/PageTtitle.styled';\n\nconst Modal = ({ handelModalClose, children, title }) => {\n  return (\n    <Backdrop>\n      <ModalStyle>\n        <ModalCloseIcon type=\"button\" onClick={handelModalClose} />\n        <PageTitle>{title}</PageTitle>\n        {children}\n      </ModalStyle>\n    </Backdrop>\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const PageContentBox = styled.div`\n  /* position: relative; */\n  /* width: 100%; */\n  min-height: 100vh;\n  background-color: #fff;\n  border: 0 solid rgba(0, 0, 0, 0.125);\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0.125), 0 1px 3px rgba(0, 0, 0, 0.2);\n  border-radius: 0.25rem;\n  margin-top: 30px;\n  margin-right: 10px;\n  margin-left: 10px;\n  margin-bottom: 30px;\n  animation: pageAnime 1s ease 0s 1 normal forwards;\n`;\n","import styled from 'styled-components';\n\nexport const PageHeader = styled.div`\n  display: flex;\n  align-items: center;\n  /* gap: 20px; */\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\nexport const PageTableStyle = styled.table`\n  /* display: block; */\n  width: 100%;\n  border: 1px solid #dee2e6;\n  border-collapse: collapse;\n  margin-top: 6px;\n  margin-bottom: 6px;\n`;\n","import styled from 'styled-components';\n\nexport const TableTd = styled.td`\n  padding: 12px;\n  border: 1px solid #dee2e6;\n  background-color: rgba(0, 0, 0, 0.05);\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: start;\n`;\n","import styled from 'styled-components';\n\nexport const TableTh = styled.th`\n  padding: 8px;\n  border: 1px solid #dee2e6;\n  border-bottom: 2px solid #dee2e6;\n  text-align: start;\n`;\n","import styled from 'styled-components';\n\nexport const TableThBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 400;\n`;\n","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n  padding: 12px 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n`;\n","import styled from 'styled-components';\n\nexport const PaginationBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { Pagination, Stack } from '@mui/material';\nimport { PaginationBox } from 'components/paginationPage/PaginationBox';\n\nconst TablePagination = ({ allPage, onChange, list, page }) => {\n  return (\n    <>\n      {!allPage || allPage === 1 || list.length < 1 ? (\n        <PaginationBox></PaginationBox>\n      ) : (\n        <PaginationBox>\n          <div>\n            <p>{`${page} page of ${allPage} pages`}</p>\n          </div>\n          <Stack spacing={2}>\n            <Pagination\n              // getItemAriaLabel={handelClick}\n              onChange={onChange}\n              count={allPage}\n              shape=\"rounded\"\n            />\n          </Stack>\n        </PaginationBox>\n      )}\n    </>\n  );\n};\n\n// ({\n//     !perPage || perPage === 1 || usersList.length <= 1 ? (\n//       <PaginationBox></PaginationBox>\n//     ) : (\n//       <PaginationBox>\n//         <div>\n//           <p>{`${page} page of ${perPage} pages`}</p>\n//         </div>\n//         <Stack spacing={2}>\n//           <Pagination\n//             // getItemAriaLabel={handelClick}\n//             onChange={onChange}\n//             count={perPage}\n//             shape=\"rounded\"\n//           />\n//         </Stack>\n//       </PaginationBox>\n//     )})\n\nexport default TablePagination;\n","import { FormBox } from 'components/form/common/FormBox.styled';\nimport { InputStyle } from 'components/form/common/InputStyle.styled';\nimport { LabelStyle } from 'components/form/common/LabelStyle.styled';\nimport { FormStyle } from 'components/form/FormStyle.styled';\nimport { Formik } from 'formik';\nimport { GrCircleQuestion } from 'react-icons/gr';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { languagesOperations, languagesSelectors } from 'redux/languages';\nimport theme from 'theme/theme';\n\nconst CreateLanguagesForm = () => {\n  const dispatch = useDispatch();\n  const btnTitle = useSelector(languagesSelectors.getBtnTitle);\n  const formFields = useSelector(languagesSelectors.getFieldsForm);\n\n  const filterFields = formFields.filter(elem => elem === Object(elem));\n  const res = filterFields.reduce((acc, { id, value }) => {\n    if (!value) {\n      acc[id] = '';\n    } else {\n      acc[id] = value;\n    }\n    return acc;\n  }, {});\n\n  return (\n    <Formik\n      initialValues={res}\n      onSubmit={async (values, actions) => {\n        console.log(values);\n        dispatch(languagesOperations.addLanguages(values));\n        // dispatch(usersOperations.addUser(values));\n        // navigate(path);\n        // submitForm(values);\n        // actions.resetForm();\n        // console.log(status);\n      }}\n    >\n      {props => (\n        <FormStyle onSubmit={props.handleSubmit} id=\"usersForm\">\n          {filterFields.map(elem => (\n            <FormBox key={elem.id}>\n              <LabelStyle style={{ marginRight: 'auto' }} htmlFor={elem.id}>\n                {elem.label}\n                <sup style={{ color: 'red', fontWeight: 'inherit' }}>*</sup>\n                {elem.tooltip && (\n                  <GrCircleQuestion\n                    style={{ cursor: 'pointer' }}\n                    title={elem.tooltip}\n                  />\n                )}\n              </LabelStyle>\n\n              <InputStyle\n                type={elem.type}\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={elem.value}\n                id={elem.id}\n                name={elem.id}\n                placeholder={elem.id}\n              />\n            </FormBox>\n          ))}\n          <button style={theme.btn.btnGreen} type=\"submit\">\n            {btnTitle}\n          </button>\n        </FormStyle>\n      )}\n    </Formik>\n  );\n};\nexport default CreateLanguagesForm;\n","import { useDispatch } from 'react-redux';\n\nimport { languagesOperations } from 'redux/languages';\n\nimport { PageTableStyle } from 'components/pageTable/common/PageTableStyle.styled';\nimport { TableTd } from 'components/pageTable/common/TableTd.style';\nimport { TableTh } from 'components/pageTable/common/TableTh.style';\nimport { TableThBox } from 'components/pageTable/common/TableThBox.styled';\nimport theme from 'theme/theme';\n\nconst LanguagesTable = ({ list, title, btnTitle, prevPath }) => {\n  const dispatch = useDispatch();\n  //   const handleClick = e => {\n  //     const id = e.currentTarget.dataset.value;\n  //     dispatch(rolesOperations.getRoleForm(id));\n  //   };\n  const handleDelete = (id, name) => {\n    // eslint-disable-next-line no-restricted-globals\n    const getconfirm = confirm(`Вы действительно хотите удалить язык ${name}`);\n    if (getconfirm) {\n      dispatch(languagesOperations.deleteLanguages(id));\n    }\n    // dispatch(rolesOperations.RoleDelete(id));\n    // alert(isAdmin);\n  };\n  let tableTitles = [];\n  if (list.length === 0) {\n    return tableTitles;\n  } else {\n    const tableTitlesFilter = Object.keys(list[0]);\n    tableTitles = tableTitlesFilter.filter(\n      elem => elem !== 'updated_at' && elem !== 'created_at'\n    );\n  }\n\n  return (\n    <>\n      {list.length === 0 ? (\n        <div>Нечего нет</div>\n      ) : (\n        <PageTableStyle>\n          <thead>\n            <tr>\n              {tableTitles.map(elem => (\n                <TableTh key={elem}>\n                  <TableThBox>{elem}</TableThBox>\n                </TableTh>\n              ))}\n              <TableTh>\n                <TableThBox style={{ width: '8%' }}>Actions</TableThBox>\n              </TableTh>\n            </tr>\n          </thead>\n          <tbody>\n            {list.map(elem => (\n              <tr key={elem.id}>\n                <TableTd>{elem.id}</TableTd>\n                <TableTd>{elem.name.en}</TableTd>\n                <TableTd>{elem.code}</TableTd>\n                <TableTd>{elem.shortcode}</TableTd>\n                <TableTd>{elem.status}</TableTd>\n                <TableTd style={{ width: '8%' }}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '12px',\n                    }}\n                  >\n                    <button\n                      style={theme.btn.btnRed}\n                      type=\"button\"\n                      onClick={() => handleDelete(elem.id, elem.name.en)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </TableTd>\n              </tr>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              {tableTitles.map(elem => (\n                <TableTh key={elem}>\n                  <TableThBox>{elem}</TableThBox>\n                </TableTh>\n              ))}\n              <TableTh style={{ width: '8%' }}>\n                <TableThBox>Actions</TableThBox>\n              </TableTh>\n            </tr>\n          </tfoot>\n        </PageTableStyle>\n      )}\n    </>\n  );\n};\n\nexport default LanguagesTable;\n","import CreateLanguagesForm from 'components/createLanguagesForm/CreateLanguagesForm';\nimport LanguagesTable from 'components/languagesTable/LanguagesTable';\nimport { PageContentBox } from 'components/pageContentBox/PageContentBox.styled';\nimport { PageHeader } from 'components/pageHeader/PageHeader.styled';\nimport { PageTitle } from 'components/pageTitle/PageTtitle.styled';\nimport { Section } from 'components/section/Section.styled';\nimport TablePagination from 'components/tablePagination/TablePagination';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { languagesOperations, languagesSelectors } from 'redux/languages';\nimport theme from 'theme/theme';\n\nimport Modal from '../components/modal/Modal';\n\nconst Languages = () => {\n  const currentPage = useSelector(languagesSelectors.getCurrentPage);\n  const [page, setPage] = useState(1);\n  const [modalShow, setModalShow] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const titlePage = useSelector(languagesSelectors.getTitle);\n  const btnTitle = useSelector(languagesSelectors.getBtnTitle);\n  const isCreate = useSelector(languagesSelectors.getIsCreate);\n  // const formFields = useSelector(languagesSelectors.getFieldsForm);\n  const languagesList = useSelector(languagesSelectors.getLanguagesList);\n  const total = useSelector(languagesSelectors.getTotalPage);\n\n  useEffect(() => {\n    dispatch(languagesOperations.getLanguages(page));\n  }, [dispatch, page]);\n  const handelClick = (e, page) => {\n    if (currentPage !== page) {\n      setPage(page);\n    }\n    console.log(page);\n    // setPage(page);\n  };\n  const handelModalShow = () => {\n    setModalShow(true);\n  };\n  const handelModalClose = () => {\n    setModalShow(false);\n  };\n  useEffect(() => {\n    if (isCreate) {\n      // console.log(true);\n      handelModalClose();\n    }\n  }, [isCreate]);\n  return (\n    <>\n      <PageContentBox>\n        <Section>\n          <PageHeader>\n            <PageTitle>{titlePage}</PageTitle>\n            <button style={theme.btn.btnGreen} onClick={handelModalShow}>\n              {btnTitle}\n            </button>\n          </PageHeader>\n        </Section>\n        <Section>\n          <LanguagesTable\n            list={languagesList}\n            title={titlePage}\n            btnTitle={btnTitle}\n            prevPath={location.pathname}\n          />\n          <TablePagination\n            allPage={total}\n            list={languagesList}\n            onChange={handelClick}\n            page={currentPage}\n          />\n        </Section>\n      </PageContentBox>\n      {modalShow && (\n        <Modal\n          handelModalClose={handelModalClose}\n          children={<CreateLanguagesForm />}\n          title={titlePage}\n        ></Modal>\n      )}\n    </>\n  );\n};\n\nexport default Languages;\n"],"names":["FormStyle","styled","Form","FormBox","InputStyle","LabelStyle","Backdrop","ModalStyle","ModalCloseIcon","BiX","handelModalClose","children","title","type","onClick","PageContentBox","PageHeader","PageTableStyle","TableTd","TableTh","TableThBox","PageTitle","Section","PaginationBox","allPage","onChange","list","page","length","Stack","spacing","Pagination","count","shape","dispatch","useDispatch","btnTitle","useSelector","languagesSelectors","filterFields","filter","elem","Object","res","reduce","acc","id","value","initialValues","onSubmit","values","actions","console","log","languagesOperations","props","handleSubmit","map","style","marginRight","htmlFor","label","color","fontWeight","tooltip","cursor","handleChange","onBlur","handleBlur","name","placeholder","theme","prevPath","tableTitles","keys","width","en","code","shortcode","status","display","alignItems","gap","confirm","currentPage","useState","setPage","modalShow","setModalShow","location","useLocation","titlePage","isCreate","languagesList","total","useEffect","pathname","TablePagination","e","Modal"],"sourceRoot":""}